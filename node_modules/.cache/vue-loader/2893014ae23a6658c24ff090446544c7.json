{"remainingRequest":"C:\\Users\\Cafe'in\\Documents\\GitHub\\Cafein-Chat-App-Frontend\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Cafe'in\\Documents\\GitHub\\Cafein-Chat-App-Frontend\\src\\views\\Chat.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\Cafe'in\\Documents\\GitHub\\Cafein-Chat-App-Frontend\\src\\views\\Chat.vue","mtime":1600185251701},{"path":"C:\\Users\\Cafe'in\\Documents\\GitHub\\Cafein-Chat-App-Frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Cafe'in\\Documents\\GitHub\\Cafein-Chat-App-Frontend\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\Cafe'in\\Documents\\GitHub\\Cafein-Chat-App-Frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Cafe'in\\Documents\\GitHub\\Cafein-Chat-App-Frontend\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCgppbXBvcnQgaW8gZnJvbSAnc29ja2V0LmlvLWNsaWVudCcKaW1wb3J0IGlucHV0TWVzc2FnZSBmcm9tICcuLi9jb21wb25lbnRzL19iYXNlL0lucHV0TWVzc2FnZScKCmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lOiAnQ2hhdCcsCiAgY29tcG9uZW50czogewogICAgaW5wdXRNZXNzYWdlCiAgfSwKICBkYXRhOiAoKSA9PiAoewogICAgc29ja2V0OiBpbygnaHR0cDovL2xvY2FsaG9zdDo0MDAwJyksCiAgICB1c2VySWQ6IG51bGwsCiAgICB1c2VybmFtZTogJycsCiAgICBtZXNzYWdlczogW10sCiAgICByb29tOiAnJwogIH0pLAogIG1vdW50ZWQgKCkgewogICAgaWYgKCF0aGlzLiRyb3V0ZS5wYXJhbXMudXNlcklkKSB7CiAgICAgIHRoaXMuJHJvdXRlci5wdXNoKCcvYWJvdXQnKQogICAgfQogICAgdGhpcy51c2VySWQgPSB0aGlzLiRyb3V0ZS5wYXJhbXMudXNlcklkCiAgICB0aGlzLnVzZXJuYW1lID0gdGhpcy4kcm91dGUucGFyYW1zLnVzZXJuYW1lCiAgICB0aGlzLnJvb20gPSB0aGlzLiRyb3V0ZS5wYXJhbXMucm9vbQogICAgdGhpcy5zb2NrZXQuZW1pdCgnd2VsY29tZU1lc3NhZ2UnLCB7IGlkOiB0aGlzLnVzZXJJZCwgdXNlcm5hbWU6IHRoaXMudXNlcm5hbWUsIHJvb206IHRoaXMucm9vbSB9KQogICAgdGhpcy5zb2NrZXQub24oJ21lc3NhZ2UnLCBtZXNzYWdlID0+IHsKICAgICAgY29uc29sZS5sb2cobWVzc2FnZSkKICAgICAgdGhpcy5tZXNzYWdlcy5wdXNoKG1lc3NhZ2UpCiAgICB9KQogICAgdGhpcy5zb2NrZXQub24oJ25vdGlmJywgbWVzc2FnZSA9PiB7CiAgICAgIGFsZXJ0KG1lc3NhZ2UpCiAgICB9KQogIH0sCiAgbWV0aG9kczogewogICAgaGFuZGxlU2VuZE1lc3NhZ2UgKHZhbHVlKSB7CiAgICAgIHRoaXMuc29ja2V0LmVtaXQoJ3NlbmRNZXNzYWdlJywgewogICAgICAgIG1lc3NhZ2U6IHZhbHVlLAogICAgICAgIHVzZXJJZDogdGhpcy51c2VySWQsCiAgICAgICAgcm9vbTogdGhpcy5yb29tCiAgICAgIH0sIChlcnJvcikgPT4gewogICAgICAgIGFsZXJ0KGVycm9yKQogICAgICB9KQogICAgfQogIH0KfQo="},{"version":3,"sources":["Chat.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;AAsBA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Chat.vue","sourceRoot":"src/views","sourcesContent":["<template>\n    <div class=\"container\">\n        <h2>Selamat Datamg chatrisano</h2>\n        <div class=\"row\">\n            <div class=\"col-md-4\">\n                <!-- list user -->\n            </div>\n            <div class=\"col-md-8\">\n                <!-- with chat -->\n                <div class=\"box-chat\">\n                    <ul class=\"list-group list-group-flush\">\n                        <li class=\"list-group-item\" v-for=\"(message, index) in messages\" :key=\"index\">{{message}}</li>\n                    </ul>\n                    <inputMessage @send-message=\"handleSendMessage\"/>\n                </div>\n            </div>\n        </div>\n    </div>\n</template>\n\n<script>\n\nimport io from 'socket.io-client'\nimport inputMessage from '../components/_base/InputMessage'\n\nexport default {\n  name: 'Chat',\n  components: {\n    inputMessage\n  },\n  data: () => ({\n    socket: io('http://localhost:4000'),\n    userId: null,\n    username: '',\n    messages: [],\n    room: ''\n  }),\n  mounted () {\n    if (!this.$route.params.userId) {\n      this.$router.push('/about')\n    }\n    this.userId = this.$route.params.userId\n    this.username = this.$route.params.username\n    this.room = this.$route.params.room\n    this.socket.emit('welcomeMessage', { id: this.userId, username: this.username, room: this.room })\n    this.socket.on('message', message => {\n      console.log(message)\n      this.messages.push(message)\n    })\n    this.socket.on('notif', message => {\n      alert(message)\n    })\n  },\n  methods: {\n    handleSendMessage (value) {\n      this.socket.emit('sendMessage', {\n        message: value,\n        userId: this.userId,\n        room: this.room\n      }, (error) => {\n        alert(error)\n      })\n    }\n  }\n}\n</script>\n\n<style scoped>\n\n</style>\n"]}]}