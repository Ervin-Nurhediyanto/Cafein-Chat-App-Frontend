{"remainingRequest":"C:\\Users\\Cafe'in\\Documents\\GitHub\\Cafein-Chat-App-Frontend\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Cafe'in\\Documents\\GitHub\\Cafein-Chat-App-Frontend\\src\\views\\Chat\\Chat.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\Cafe'in\\Documents\\GitHub\\Cafein-Chat-App-Frontend\\src\\views\\Chat\\Chat.vue","mtime":1600522626556},{"path":"C:\\Users\\Cafe'in\\Documents\\GitHub\\Cafein-Chat-App-Frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Cafe'in\\Documents\\GitHub\\Cafein-Chat-App-Frontend\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\Cafe'in\\Documents\\GitHub\\Cafein-Chat-App-Frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Cafe'in\\Documents\\GitHub\\Cafein-Chat-App-Frontend\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KDQppbXBvcnQgQ2hhdExpc3QgZnJvbSAnLi4vLi4vY29tcG9uZW50cy9jaGF0L0NoYXQtTGlzdCcNCmltcG9ydCBNZXNzYWdlRW1wdHkgZnJvbSAnLi4vLi4vY29tcG9uZW50cy9tZXNzYWdlL01lc3NhZ2UtRW1wdHknDQppbXBvcnQgTWVzc2FnZUF2YWlsYWJsZSBmcm9tICcuLi8uLi9jb21wb25lbnRzL21lc3NhZ2UvTWVzc2FnZS1BdmFpbGFibGUnDQppbXBvcnQgeyBtYXBHZXR0ZXJzLCBtYXBBY3Rpb25zIH0gZnJvbSAndnVleCcNCmltcG9ydCBpbyBmcm9tICdzb2NrZXQuaW8tY2xpZW50Jw0KDQpleHBvcnQgZGVmYXVsdCB7DQogIG5hbWU6ICdDaGF0JywNCiAgZGF0YSAoKSB7DQogICAgcmV0dXJuIHsNCiAgICAgIHNvY2tldDogaW8oJ2h0dHA6Ly9sb2NhbGhvc3Q6NDAwMCcpLA0KICAgICAgbWVzc2FnZXM6IFtdLA0KICAgICAgZW1wdHk6IGZhbHNlLA0KICAgICAgcm9vbTogMSwNCiAgICAgIGFsbENvbnRhY3Q6IFtdLA0KICAgICAgaWRVc2VyOiBudWxsDQogICAgfQ0KICB9LA0KICBjb21wb25lbnRzOiB7DQogICAgQ2hhdExpc3QsDQogICAgTWVzc2FnZUVtcHR5LA0KICAgIE1lc3NhZ2VBdmFpbGFibGUNCiAgfSwNCiAgY29tcHV0ZWQ6IHsNCiAgICAuLi5tYXBHZXR0ZXJzKHsNCiAgICAgIHVzZXI6ICd1c2VyJywNCiAgICAgIGFsbFVzZXI6ICdhbGxVc2VyJywNCiAgICAgIHVzZXJJZDogJ3VzZXJJZCcNCiAgICAgIC8vIGFsbENvbnRhY3Q6IHRoaXMuYWxsVXNlcg0KICAgIH0pDQogIH0sDQogIG1vdW50ZWQgKCkgew0KICAgIHRoaXMuc29ja2V0LmVtaXQoJ3dlbGNvbWVNZXNzYWdlJywgeyBpZDogdGhpcy51c2VyLmlkLCB1c2VybmFtZTogdGhpcy51c2VyLnVzZXJOYW1lLCByb29tOiB0aGlzLnJvb20gfSkNCiAgICB0aGlzLnNvY2tldC5vbignbWVzc2FnZScsIG1lc3NhZ2UgPT4gew0KICAgICAgY29uc29sZS5sb2cobWVzc2FnZSkNCiAgICAgIHRoaXMubWVzc2FnZXMucHVzaChtZXNzYWdlKQ0KICAgIH0pDQogICAgdGhpcy5zb2NrZXQub24oJ25vdGlmJywgbWVzc2FnZSA9PiB7DQogICAgICAvLyBhbGVydChtZXNzYWdlKQ0KICAgICAgc3dhbChtZXNzYWdlKQ0KICAgIH0pDQogICAgdGhpcy5nZXRBbGxVc2VyKCkNCiAgICB0aGlzLmlkTnVtYmVyKCkNCiAgICB0aGlzLmdldEFsbGNvbnRhY3QoKQ0KICB9LA0KICBtZXRob2RzOiB7DQogICAgLi4ubWFwQWN0aW9ucyhbJ2dldEFsbFVzZXInXSksDQogICAgbWVzc2FnZU9rIChtZXNzYWdlT2spIHsNCiAgICAgIGNvbnNvbGUubG9nKCdva2U6ICcgKyBtZXNzYWdlT2spDQogICAgICB0aGlzLnNvY2tldC5lbWl0KCdzZW5kTWVzc2FnZScsIHsNCiAgICAgICAgbWVzc2FnZTogbWVzc2FnZU9rLA0KICAgICAgICB1c2VySWQ6IHRoaXMudXNlci5pZCwNCiAgICAgICAgcm9vbTogdGhpcy5yb29tDQogICAgICB9LCAoZXJyb3IpID0+IHsNCiAgICAgICAgYWxlcnQoZXJyb3IpDQogICAgICB9KQ0KICAgIH0sDQogICAgaWROdW1iZXIgKCkgew0KICAgICAgdGhpcy5pZFVzZXIgPSBOdW1iZXIodGhpcy51c2VySWQpDQogICAgfSwNCiAgICBnZXRBbGxjb250YWN0ICgpIHsNCiAgICAgIHRoaXMuYWxsVXNlci5tYXAoKGl0ZW0pID0+IHsNCiAgICAgICAgaWYgKGl0ZW0uaWQgIT09IHRoaXMuaWRVc2VyKSB7DQogICAgICAgICAgY29uc29sZS5sb2coaXRlbS5pZCkNCiAgICAgICAgICBjb25zb2xlLmxvZyh0aGlzLmlkVXNlcikNCiAgICAgICAgICB0aGlzLmFsbENvbnRhY3QucHVzaChpdGVtKQ0KICAgICAgICB9DQogICAgICB9KQ0KICAgIH0sDQogICAgc3RhckNoYXQgKHN0YXJDaGF0KSB7DQogICAgICB0aGlzLnJvb20gPSBzdGFyQ2hhdA0KICAgICAgLy8gY29uc29sZS5sb2coJ29rZTogJyArIG1lc3NhZ2VPaykNCiAgICAgIHRoaXMuc29ja2V0LmVtaXQoJ3dlbGNvbWVNZXNzYWdlJywgew0KICAgICAgICBpZDogdGhpcy51c2VyLmlkLA0KICAgICAgICB1c2VybmFtZTogdGhpcy51c2VyLnVzZXJOYW1lLA0KICAgICAgICByb29tOiBzdGFyQ2hhdA0KICAgICAgfSwgKGVycm9yKSA9PiB7DQogICAgICAgIGFsZXJ0KGVycm9yKQ0KICAgICAgfSkNCiAgICB9DQogIH0NCn0NCg=="},{"version":3,"sources":["Chat.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;AAwBA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Chat.vue","sourceRoot":"src/views/Chat","sourcesContent":["<template>\r\n  <div class=\"row\">\r\n    <div class=\"List\">\r\n      <ChatList\r\n      :allUser=\"allUser\"\r\n      v-on:starChat=\"starChat($event)\"/>\r\n    </div>\r\n    <div class=\"Message\">\r\n      <MessageEmpty v-if=\"empty\"/>\r\n      <MessageAvailable v-else\r\n      v-on:sendMessage=\"messageOk($event)\"\r\n      :messages='messages'\r\n      />\r\n    </div>\r\n\r\n    <!-- <ul class=\"list-group list-group-flush\">\r\n      <li class=\"list-group-item\" v-for=\"(message, index) in messages\" :key=\"index\">{{message}}</li>\r\n    </ul>\r\n    <input type=\"text\" @keyup.enter=\"handleSendMessage\"> -->\r\n\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport ChatList from '../../components/chat/Chat-List'\r\nimport MessageEmpty from '../../components/message/Message-Empty'\r\nimport MessageAvailable from '../../components/message/Message-Available'\r\nimport { mapGetters, mapActions } from 'vuex'\r\nimport io from 'socket.io-client'\r\n\r\nexport default {\r\n  name: 'Chat',\r\n  data () {\r\n    return {\r\n      socket: io('http://localhost:4000'),\r\n      messages: [],\r\n      empty: false,\r\n      room: 1,\r\n      allContact: [],\r\n      idUser: null\r\n    }\r\n  },\r\n  components: {\r\n    ChatList,\r\n    MessageEmpty,\r\n    MessageAvailable\r\n  },\r\n  computed: {\r\n    ...mapGetters({\r\n      user: 'user',\r\n      allUser: 'allUser',\r\n      userId: 'userId'\r\n      // allContact: this.allUser\r\n    })\r\n  },\r\n  mounted () {\r\n    this.socket.emit('welcomeMessage', { id: this.user.id, username: this.user.userName, room: this.room })\r\n    this.socket.on('message', message => {\r\n      console.log(message)\r\n      this.messages.push(message)\r\n    })\r\n    this.socket.on('notif', message => {\r\n      // alert(message)\r\n      swal(message)\r\n    })\r\n    this.getAllUser()\r\n    this.idNumber()\r\n    this.getAllcontact()\r\n  },\r\n  methods: {\r\n    ...mapActions(['getAllUser']),\r\n    messageOk (messageOk) {\r\n      console.log('oke: ' + messageOk)\r\n      this.socket.emit('sendMessage', {\r\n        message: messageOk,\r\n        userId: this.user.id,\r\n        room: this.room\r\n      }, (error) => {\r\n        alert(error)\r\n      })\r\n    },\r\n    idNumber () {\r\n      this.idUser = Number(this.userId)\r\n    },\r\n    getAllcontact () {\r\n      this.allUser.map((item) => {\r\n        if (item.id !== this.idUser) {\r\n          console.log(item.id)\r\n          console.log(this.idUser)\r\n          this.allContact.push(item)\r\n        }\r\n      })\r\n    },\r\n    starChat (starChat) {\r\n      this.room = starChat\r\n      // console.log('oke: ' + messageOk)\r\n      this.socket.emit('welcomeMessage', {\r\n        id: this.user.id,\r\n        username: this.user.userName,\r\n        room: starChat\r\n      }, (error) => {\r\n        alert(error)\r\n      })\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.List {\r\n  position: absolute;\r\n  left: 0;\r\n  top: 0;\r\n  /* background-color: #ffffff; */\r\n  width: 25%;\r\n  height: 100%;\r\n  padding-left: 15px;\r\n  padding-right: 15px;\r\n  padding-bottom: 15px;\r\n  border-right: 1px solid #E5E5E5;\r\n  /* background-color: red; */\r\n}\r\n\r\n.Message {\r\n  position: absolute;\r\n  right: 0;\r\n  top: 0;\r\n  background-color: transparent;\r\n  width: 75%;\r\n  height: 100%;\r\n  /* background-color: tomato; */\r\n}\r\n</style>\r\n"]}]}