{"remainingRequest":"C:\\Users\\Cafe'in\\Documents\\GitHub\\Cafein-Chat-App-Frontend\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Cafe'in\\Documents\\GitHub\\Cafein-Chat-App-Frontend\\src\\views\\Chat\\Chat.vue?vue&type=style&index=0&id=57446385&scoped=true&lang=css&","dependencies":[{"path":"C:\\Users\\Cafe'in\\Documents\\GitHub\\Cafein-Chat-App-Frontend\\src\\views\\Chat\\Chat.vue","mtime":1600522626556},{"path":"C:\\Users\\Cafe'in\\Documents\\GitHub\\Cafein-Chat-App-Frontend\\node_modules\\css-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Cafe'in\\Documents\\GitHub\\Cafein-Chat-App-Frontend\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"C:\\Users\\Cafe'in\\Documents\\GitHub\\Cafein-Chat-App-Frontend\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"C:\\Users\\Cafe'in\\Documents\\GitHub\\Cafein-Chat-App-Frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Cafe'in\\Documents\\GitHub\\Cafein-Chat-App-Frontend\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKDQouTGlzdCB7DQogIHBvc2l0aW9uOiBhYnNvbHV0ZTsNCiAgbGVmdDogMDsNCiAgdG9wOiAwOw0KICAvKiBiYWNrZ3JvdW5kLWNvbG9yOiAjZmZmZmZmOyAqLw0KICB3aWR0aDogMjUlOw0KICBoZWlnaHQ6IDEwMCU7DQogIHBhZGRpbmctbGVmdDogMTVweDsNCiAgcGFkZGluZy1yaWdodDogMTVweDsNCiAgcGFkZGluZy1ib3R0b206IDE1cHg7DQogIGJvcmRlci1yaWdodDogMXB4IHNvbGlkICNFNUU1RTU7DQogIC8qIGJhY2tncm91bmQtY29sb3I6IHJlZDsgKi8NCn0NCg0KLk1lc3NhZ2Ugew0KICBwb3NpdGlvbjogYWJzb2x1dGU7DQogIHJpZ2h0OiAwOw0KICB0b3A6IDA7DQogIGJhY2tncm91bmQtY29sb3I6IHRyYW5zcGFyZW50Ow0KICB3aWR0aDogNzUlOw0KICBoZWlnaHQ6IDEwMCU7DQogIC8qIGJhY2tncm91bmQtY29sb3I6IHRvbWF0bzsgKi8NCn0NCg=="},{"version":3,"sources":["Chat.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA6GA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Chat.vue","sourceRoot":"src/views/Chat","sourcesContent":["<template>\r\n  <div class=\"row\">\r\n    <div class=\"List\">\r\n      <ChatList\r\n      :allUser=\"allUser\"\r\n      v-on:starChat=\"starChat($event)\"/>\r\n    </div>\r\n    <div class=\"Message\">\r\n      <MessageEmpty v-if=\"empty\"/>\r\n      <MessageAvailable v-else\r\n      v-on:sendMessage=\"messageOk($event)\"\r\n      :messages='messages'\r\n      />\r\n    </div>\r\n\r\n    <!-- <ul class=\"list-group list-group-flush\">\r\n      <li class=\"list-group-item\" v-for=\"(message, index) in messages\" :key=\"index\">{{message}}</li>\r\n    </ul>\r\n    <input type=\"text\" @keyup.enter=\"handleSendMessage\"> -->\r\n\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport ChatList from '../../components/chat/Chat-List'\r\nimport MessageEmpty from '../../components/message/Message-Empty'\r\nimport MessageAvailable from '../../components/message/Message-Available'\r\nimport { mapGetters, mapActions } from 'vuex'\r\nimport io from 'socket.io-client'\r\n\r\nexport default {\r\n  name: 'Chat',\r\n  data () {\r\n    return {\r\n      socket: io('http://localhost:4000'),\r\n      messages: [],\r\n      empty: false,\r\n      room: 1,\r\n      allContact: [],\r\n      idUser: null\r\n    }\r\n  },\r\n  components: {\r\n    ChatList,\r\n    MessageEmpty,\r\n    MessageAvailable\r\n  },\r\n  computed: {\r\n    ...mapGetters({\r\n      user: 'user',\r\n      allUser: 'allUser',\r\n      userId: 'userId'\r\n      // allContact: this.allUser\r\n    })\r\n  },\r\n  mounted () {\r\n    this.socket.emit('welcomeMessage', { id: this.user.id, username: this.user.userName, room: this.room })\r\n    this.socket.on('message', message => {\r\n      console.log(message)\r\n      this.messages.push(message)\r\n    })\r\n    this.socket.on('notif', message => {\r\n      // alert(message)\r\n      swal(message)\r\n    })\r\n    this.getAllUser()\r\n    this.idNumber()\r\n    this.getAllcontact()\r\n  },\r\n  methods: {\r\n    ...mapActions(['getAllUser']),\r\n    messageOk (messageOk) {\r\n      console.log('oke: ' + messageOk)\r\n      this.socket.emit('sendMessage', {\r\n        message: messageOk,\r\n        userId: this.user.id,\r\n        room: this.room\r\n      }, (error) => {\r\n        alert(error)\r\n      })\r\n    },\r\n    idNumber () {\r\n      this.idUser = Number(this.userId)\r\n    },\r\n    getAllcontact () {\r\n      this.allUser.map((item) => {\r\n        if (item.id !== this.idUser) {\r\n          console.log(item.id)\r\n          console.log(this.idUser)\r\n          this.allContact.push(item)\r\n        }\r\n      })\r\n    },\r\n    starChat (starChat) {\r\n      this.room = starChat\r\n      // console.log('oke: ' + messageOk)\r\n      this.socket.emit('welcomeMessage', {\r\n        id: this.user.id,\r\n        username: this.user.userName,\r\n        room: starChat\r\n      }, (error) => {\r\n        alert(error)\r\n      })\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.List {\r\n  position: absolute;\r\n  left: 0;\r\n  top: 0;\r\n  /* background-color: #ffffff; */\r\n  width: 25%;\r\n  height: 100%;\r\n  padding-left: 15px;\r\n  padding-right: 15px;\r\n  padding-bottom: 15px;\r\n  border-right: 1px solid #E5E5E5;\r\n  /* background-color: red; */\r\n}\r\n\r\n.Message {\r\n  position: absolute;\r\n  right: 0;\r\n  top: 0;\r\n  background-color: transparent;\r\n  width: 75%;\r\n  height: 100%;\r\n  /* background-color: tomato; */\r\n}\r\n</style>\r\n"]}]}